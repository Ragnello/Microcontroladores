2)		mov.w R7, R11;
		mov.w R8, R12;
		cmp.w R11, R12;
		jl ELSE;
		add R5, R4;
		add R6, R4;
		add.w #10, R4;
	ELSE:
		add R5, R4;
		sub R6, R4;
		sub #10, 


3)	
		mov.w R7, R12;	
	LOOP:
		cmp R12, R9;
		jeq EXIT;
		inc.w R12;
		jmp LOOP;

	EXIT:	

4)		mov.w #0, R7;
		mov.w #100, R14;
		mov.w R9, R15;
	LOOP:
		mov.w R7, R12;
		add.w R12, R15;
		rla.w R12;
		mov.w R12, 0(R15);
		inc.w R7;
		cmp R7, R14;
		jeq EXIT;
		jmp LOOP;
	EXIT:

5)		mov.w #99, R7;
		mov.w #0, R14;
		mov.w R9, R15;
	LOOP:
		mov.w R7, R12;
		add.w R12, R15;
		rla.w R12;
		mov.w R12, 0(R15);
		dec.w R7;
		cmp R7, R14;
		jl EXIT;
		jmp LOOP;
